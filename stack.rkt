#lang racket

(define (make-stack)
  (define stack '())
  (define (empty?)
    (null? stack))
  (define (size)
    (length stack))
  (define (add! item)
    (set! stack (cons item stack)))
  (define (peek)
    (car stack))
  (define (remove!)
    (let ((removed (peek)))
      (set! stack (cdr stack))
      removed))
  (define (dispatch method)
    (cond ((equal? method 'empty?) empty?)
          ((equal? method 'size) size)
          ((equal? method 'add!) add!)
          ((equal? method 'peek) peek)
          ((equal? method 'remove!) remove!)
          (else (error "Method doesn't exist"))))
  dispatch)
